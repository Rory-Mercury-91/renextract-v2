# Configuration pour RenExtract v2
# Projet d'extraction et reconstruction pour les jeux Ren'Py

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "wheel>=0.37.1"]

[project]
name = "renextract-v2"
version = "2.0.0"
description = "Outil d'extraction et de reconstruction pour les jeux Ren'Py"
readme = "README.md"
requires-python = ">=3.9,<4.0"
authors = [
    {name = "RenExtract Team", email = "contact@renextract.com"},
]
keywords = ["renpy", "translation", "extraction", "reconstruction", "game"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: French",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Localization",
    "Topic :: Games/Entertainment",
]

# Dépendances principales
dependencies = [
    "flask>=2.0.0",
    "pywebview>=4.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
]

[project.scripts]
renextract = "app:main"

[project.urls]
Homepage = "https://github.com/Rory-Mercury-91/renextract-v2"
Documentation = "https://github.com/Rory-Mercury-91/renextract-v2#readme"
Repository = "https://github.com/Rory-Mercury-91/renextract-v2"
Issues = "https://github.com/Rory-Mercury-91/renextract-v2/issues"

# Dépendances de développement
[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
]

lint = [
    "ruff",
]

test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
]

[tool.setuptools]
platforms = ["Linux", "Windows", "macOS"]
include-package-data = true
zip-safe = true

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

# Configuration ruff pour RenExtract
[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort (gestion des imports)
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
]

ignore = [
    "B019",  # Use of functools.lru_cache on methods (optimisation performance)
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Configuration black (alternative à autopep8)
[tool.black]
line-length = 100
target-version = ['py39']

# Configuration isort
[tool.isort]
profile = "black"
known_first_party = ["src"]
line_length = 100

# Configuration mypy
[tool.mypy]
python_version = "3.9"
follow_imports = "skip"
ignore_missing_imports = true
files = "src"
exclude = [
    "tests",
    "scripts",
]

# Configuration pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

# Configuration flake8
[tool.flake8]
max-line-length = 100
extend-ignore = ["E501", "W503", "E203"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

# Configuration coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]
